// Generated by CoffeeScript 1.8.0
this.DataStore = (function() {
  function DataStore(main) {
    this.main = main;
  }

  DataStore.prototype.set = function(namespace, name, data) {
    if (typeof namespace !== "string" && (namespace.name != null)) {
      namespace = namespace.name;
    }
    return localStorage.setItem(namespace + "." + name, JSON.stringify(data));
  };

  DataStore.prototype.get = function(namespace, name) {
    if (typeof namespace !== "string" && (namespace.name != null)) {
      namespace = namespace.name;
    }
    return JSON.parse(localStorage.getItem(namespace + "." + name));
  };

  DataStore.prototype.exists = function(namespace, name) {
    if (typeof namespace !== "string" && (namespace.name != null)) {
      namespace = namespace.name;
    }
    return localStorage.getItem(namespace + "." + name) != null;
  };

  DataStore.prototype.remove = function(namespace, name) {
    if (typeof namespace !== "string" && (namespace.name != null)) {
      namespace = namespace.name;
    }
    if (this.exists(namespace, name)) {
      localStorage.removeItem(namespace + "." + name);
      return true;
    } else {
      return false;
    }
  };

  DataStore.prototype.list = function(namespace) {
    var i, key, res, _i, _ref;
    if (typeof namespace !== "string" && (namespace.name != null)) {
      namespace = namespace.name;
    }
    res = [];
    for (i = _i = 0, _ref = localStorage.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      key = localStorage.key(i);
      if (key.indexOf(namespace + ".") === 0) {
        res.push(key.substring(10, key.length));
      }
    }
    return res;
  };

  return DataStore;

})();
