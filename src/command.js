// Generated by CoffeeScript 1.8.0
this.Command = (function() {
  function Command(data) {
    var compiled, error;
    if (data == null) {
      data = {};
    }
    this.name = "Undefined command";
    this.f = (function(_this) {
      return function() {
        return _this.name;
      };
    })(this);
    this.complete = (function(_this) {
      return function() {};
    })(this);
    this.help = "Undocumented command";
    if (typeof data === "string") {
      try {
        compiled = CoffeeScript.compile("(args)->\n  " + data.split("\n").join("\n  "), {
          bare: true
        });
        this.f = eval.call(typestart.getContext(), compiled);
      } catch (_error) {
        error = _error;
      }
    } else {
      if (data.name != null) {
        this.name = data.name;
      }
      if (data.f != null) {
        this.f = data.f;
      }
      if (data.init != null) {
        this.init = data.init;
      }
      if (data.complete != null) {
        this.complete = data.complete;
      }
      if (data.help != null) {
        this.help = data.help;
      }
      if (data.example != null) {
        this.example = data.example;
      }
    }
  }

  return Command;

})();
